"use strict";(self.webpackChunkmongodb_memory_server_website=self.webpackChunkmongodb_memory_server_website||[]).push([[8750],{1092:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var o=r(5893),s=r(1151);const t={id:"common-issues",title:"Common Issues"},i=void 0,a={id:"guides/common-issues",title:"Common Issues",description:"There are some common issues you may encounter with mongodb-memory-server (or also manually handling mongod instances), this guide will try to explain why they happen how to fix those issues.",source:"@site/../docs/guides/common-issues.md",sourceDirName:"guides",slug:"/guides/common-issues",permalink:"/mongodb-memory-server/versions/beta/docs/guides/common-issues",draft:!1,unlisted:!1,editUrl:"https://github.com/nodkz/mongodb-memory-server/edit/master/docs/../docs/guides/common-issues.md",tags:[],version:"current",frontMatter:{id:"common-issues",title:"Common Issues"},sidebar:"guides",previous:{title:"Mongodb Server Versions",permalink:"/mongodb-memory-server/versions/beta/docs/guides/mongodb-server-versions"},next:{title:"Migrate to version 9.0.0",permalink:"/mongodb-memory-server/versions/beta/docs/guides/migration/migrate9"}},c={},d=[{value:"MongoWriteConcernError: operation was interrupted",id:"mongowriteconcernerror-operation-was-interrupted",level:2}];function m(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"There are some common issues you may encounter with mongodb-memory-server (or also manually handling mongod instances), this guide will try to explain why they happen how to fix those issues."}),"\n",(0,o.jsx)(n.h2,{id:"mongowriteconcernerror-operation-was-interrupted",children:"MongoWriteConcernError: operation was interrupted"}),"\n",(0,o.jsxs)(n.p,{children:["The Error ",(0,o.jsx)(n.code,{children:"MongoWriteConcernError: operation was interrupted"})," happens when a operation which is not retryable fails, which includes for example ",(0,o.jsx)(n.code,{children:"db.dropDatabase"}),".\nThis Error happens because mongodb firstly starts all instances, says they are okay and has a primary (which are all events mongodb-memory-server listens for before resolving ",(0,o.jsx)(n.code,{children:".start"}),"), but the shortly after the ",(0,o.jsx)(n.code,{children:".start"})," is resolved, the instace that is primary decides to step-down due to whatever reason."]}),"\n",(0,o.jsx)(n.p,{children:"The fix is to manually re-try those operations, like:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"// original:\nasync function setup(db) {\n  await db.dropDatabase();\n}\n\n// fix\nasync function setup(db) {\n  let retries = 5;\n  while (retries > 0) {\n    retries -= 1;\n    try {\n      await _setup(db);\n    } catch (err) {\n      if (err instanceof mongodb.MongoWriteConcernError && /operation was interrupted/.test(err.message)) {\n        continue;\n      }\n\n      throw err;\n    }\n  }\n}\n\nasync function _setup(db) {\n  await db.dropDatabase();\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"https://www.mongodb.com/docs/manual/core/retryable-writes/#retryable-write-operations",children:"Operations which are retry-able"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>i});var o=r(7294);const s={},t=o.createContext(s);function i(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);