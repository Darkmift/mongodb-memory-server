"use strict";(self.webpackChunkmongodb_memory_server_website=self.webpackChunkmongodb_memory_server_website||[]).push([[4695],{7348:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var s=i(5893),r=i(1151);const a={id:"dry-mongo-binary",title:"DryMongoBinary"},t=void 0,o={id:"api/classes/dry-mongo-binary",title:"DryMongoBinary",description:"API Documentation of DryMongoBinary-Class",source:"@site/../docs/api/classes/dry-mongo-binary.md",sourceDirName:"api/classes",slug:"/api/classes/dry-mongo-binary",permalink:"/mongodb-memory-server/versions/beta/docs/api/classes/dry-mongo-binary",draft:!1,unlisted:!1,editUrl:"https://github.com/nodkz/mongodb-memory-server/edit/master/docs/../docs/api/classes/dry-mongo-binary.md",tags:[],version:"current",frontMatter:{id:"dry-mongo-binary",title:"DryMongoBinary"},sidebar:"api",previous:{title:"MongoBinary",permalink:"/mongodb-memory-server/versions/beta/docs/api/classes/mongo-binary"},next:{title:"MongoMemoryServerStates",permalink:"/mongodb-memory-server/versions/beta/docs/api/enums/mongo-memory-server-states"}},c={},d=[{value:"Functions",id:"functions",level:2},{value:"locateBinary",id:"locatebinary",level:3},{value:"generateOptions",id:"generateoptions",level:3},{value:"parseArchiveNameRegex",id:"parsearchivenameregex",level:3},{value:"getBinaryName",id:"getbinaryname",level:3},{value:"combineBinaryName",id:"combinebinaryname",level:3},{value:"getSytemPath",id:"getsytempath",level:3},{value:"generatePaths",id:"generatepaths",level:3},{value:"generateDownloadPath",id:"generatedownloadpath",level:3},{value:"homedir",id:"homedir",level:3},{value:"Values",id:"values",level:2},{value:"binaryCache",id:"binarycache",level:3}];function l(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",p:"p",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["API Documentation of ",(0,s.jsx)(n.code,{children:"DryMongoBinary"}),"-Class"]}),"\n",(0,s.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"This class is not actually meant to be constructed, it only consists of static functions & values"})}),"\n",(0,s.jsx)(n.h3,{id:"locatebinary",children:"locateBinary"}),"\n",(0,s.jsxs)(n.p,{children:["Typings: ",(0,s.jsx)(n.code,{children:"static async locateBinary(opts: DryMongoBinaryOptions): Promise<string | undefined>"})]}),"\n",(0,s.jsx)(n.p,{children:"Try to locate a existing binary without downloading or touching the filesystem much."}),"\n",(0,s.jsx)(n.h3,{id:"generateoptions",children:"generateOptions"}),"\n",(0,s.jsxs)(n.p,{children:["Typings: ",(0,s.jsx)(n.code,{children:"static async generateOptions(opts?: DryMongoBinaryOptions): Promise<Required<DryMongoBinaryOptions>>"})]}),"\n",(0,s.jsxs)(n.p,{children:["Generate a full ",(0,s.jsx)(n.code,{children:"DryMongoBinaryOptions"})," from partial input."]}),"\n",(0,s.jsx)(n.h3,{id:"parsearchivenameregex",children:"parseArchiveNameRegex"}),"\n",(0,s.jsxs)(n.p,{children:["Typings: ",(0,s.jsx)(n.code,{children:"static parseArchiveNameRegex(input: string, opts: Required<DryMongoBinaryOptions>): Required<DryMongoBinaryOptions>"})]}),"\n",(0,s.jsx)(n.p,{children:"Parse a archive name into useable options."}),"\n",(0,s.jsx)(n.h3,{id:"getbinaryname",children:"getBinaryName"}),"\n",(0,s.jsxs)(n.p,{children:["Typings: ",(0,s.jsx)(n.code,{children:"static async getBinaryName(opts: DryMongoBinaryNameOptions): Promise<string>"})]}),"\n",(0,s.jsxs)(n.p,{children:["Get what the binary name should be formatted like.",(0,s.jsx)(n.br,{}),"\n","If ",(0,s.jsx)(n.a,{href:"/mongodb-memory-server/versions/beta/docs/api/config-options#use_archive_name_for_binary_name",children:(0,s.jsx)(n.code,{children:"USE_ARCHIVE_NAME_FOR_BINARY_NAME"})})," is ",(0,s.jsx)(n.code,{children:"true"}),", then the archive name will be used instead of what MMS uses by default."]}),"\n",(0,s.jsx)(n.h3,{id:"combinebinaryname",children:"combineBinaryName"}),"\n",(0,s.jsxs)(n.p,{children:["Typings: ",(0,s.jsx)(n.code,{children:"static combineBinaryName(basePath: string, binaryName: string): string"})]}),"\n",(0,s.jsxs)(n.p,{children:["Helper function to consistently combine a ",(0,s.jsx)(n.code,{children:"basePath"})," with the ",(0,s.jsx)(n.code,{children:"binaryName"})," (eg. ",(0,s.jsx)(n.code,{children:"/path/to/binary"}),")"]}),"\n",(0,s.jsx)(n.h3,{id:"getsytempath",children:"getSytemPath"}),"\n",(0,s.jsxs)(n.p,{children:["Typings: ",(0,s.jsx)(n.code,{children:"static async getSystemPath(systemBinary: string): Promise<string | undefined>"})]}),"\n",(0,s.jsx)(n.p,{children:"Check if the given path has all the permissions required to be executed."}),"\n",(0,s.jsx)(n.h3,{id:"generatepaths",children:"generatePaths"}),"\n",(0,s.jsxs)(n.p,{children:["Typings: ",(0,s.jsx)(n.code,{children:"static async generatePaths(opts: DryMongoBinaryOptions & DryMongoBinaryNameOptions): Promise<DryMongoBinaryPaths>"})]}),"\n",(0,s.jsx)(n.p,{children:"Get the Paths where binaries may be located in."}),"\n",(0,s.jsx)(n.h3,{id:"generatedownloadpath",children:"generateDownloadPath"}),"\n",(0,s.jsxs)(n.p,{children:["Typings: ",(0,s.jsx)(n.code,{children:"static async generateDownloadPath(opts: DryMongoBinaryOptions & DryMongoBinaryNameOptions): Promise<[boolean, string]>"})]}),"\n",(0,s.jsx)(n.p,{children:"Get the path where the binary will be downloaded to."}),"\n",(0,s.jsx)(n.h3,{id:"homedir",children:"homedir"}),"\n",(0,s.jsx)("span",{class:"badge badge--warning",children:"Internal"}),"\n",(0,s.jsxs)(n.p,{children:["Typings: ",(0,s.jsx)(n.code,{children:"private static homedir(): string"})]}),"\n",(0,s.jsxs)(n.p,{children:["Used to get the Home-Dir of the current user, it is a function on the class for easy-mocking, because ",(0,s.jsx)(n.code,{children:"os.homedir"})," cannot be easily be mocked in jest."]}),"\n",(0,s.jsx)(n.h2,{id:"values",children:"Values"}),"\n",(0,s.jsx)(n.h3,{id:"binarycache",children:"binaryCache"}),"\n",(0,s.jsxs)(n.p,{children:["Typings: ",(0,s.jsx)(n.code,{children:"static binaryCache: Map<string, string> = new Map()"})]}),"\n",(0,s.jsx)(n.p,{children:"Cache for already found binaries to not hit the filesystem too much."})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>o,a:()=>t});var s=i(7294);const r={},a=s.createContext(r);function t(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);